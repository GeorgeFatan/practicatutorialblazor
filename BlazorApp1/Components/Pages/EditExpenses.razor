@page "/expenses/edit/{expenseId:int}"
@using BlazorApp1.Services
@using BlazorApp1.Data.Models
@inject ExpenseService ExpenseService
@inject CategoryService CategoryService
@inject NavigationManager Navigation
@rendermode InteractiveServer


<h3>Edit Expense</h3>

@if (expense == null || categories == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@expense" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="title">Title</label>
            <InputText id="title" class="form-control" @bind-Value="expense.Title" />
        </div>
        <div class="form-group">
            <label for="date">Date</label>
            <InputDate id="date" class="form-control" @bind-Value="expense.Date" />
        </div>
        <div class="form-group">
            <label for="amount">Amount</label>
            <InputNumber id="amount" class="form-control" @bind-Value="expense.Amount" />
        </div>
        <div class="form-group">
            <label for="planned">Planned</label>
            <InputSelect id="planned" class="form-control" @bind-Value="expense.Planned">
                <option value="True">Yes</option>
                <option value="False">No</option>
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="category">Category</label>
            <InputSelect id="category" class="form-control" @bind-Value="expense.CategoryId">
                @foreach (var category in categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    [Parameter]
    public int expenseId { get; set; }

    private Expense expense;
    private List<Category> categories;

    protected override async Task OnInitializedAsync()
    {
        expense = await ExpenseService.GetExpenseByIdAsync(expenseId);
        categories = await CategoryService.GetCategoriesAsync();

        if (expense == null)
        {
            Navigation.NavigateTo("/expenses");
        }
    }

    private async Task HandleValidSubmit()
    {
        await ExpenseService.UpdateExpenseAsync(expense);
        Navigation.NavigateTo("/expenses");
    }
}
